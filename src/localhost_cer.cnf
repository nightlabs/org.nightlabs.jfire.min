#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .
RANDFILE		= /dev/urandom

# don't ask for input use config file values 
# NOTE: this changes the format of the distinguished name and attribute section!
prompt = no

####################################################################
[ req ]
default_bits		    = 1024
default_keyfile 	  = localhost_cer_key.pem
encrypt_key         = no
distinguished_name	= req_distinguished_name
# attributes		      = req_attributes
x509_extensions	= v3_ca	# The extentions to add to the self signed cert

# Passwords for private keys if not present they will be prompted for
# input_password  = ""
output_password = ""

# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString.
# utf8only: only UTF8Strings.
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: current versions of Netscape crash on BMPStrings or UTF8Strings
# so use this option with caution!
string_mask = nombstr

[ req_distinguished_name ]
C  =  DE
ST =  Baden-Wuerttemberg
L  =  Freiburg
O  =  NightLabs
OU =  NightLabs Development
CN =  localhost

subjectAltName=IP:127.0.0.1,DNS:localhost
nsCertType=server

[ v3_ca ]
# This is OK for an SSL server.
nsCertType=server

# AltNames for local server
subjectAltName=IP:127.0.0.1,DNS:localhost,DNS:testing.jfire.org

# Extensions for a typical CA

# PKIX recommendation.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always

# This is what PKIX recommends but some broken software chokes on critical
# extensions.
#basicConstraints = critical,CA:true
# So we do this instead.
basicConstraints = CA:true