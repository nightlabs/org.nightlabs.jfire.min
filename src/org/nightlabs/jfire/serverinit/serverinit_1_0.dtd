<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (c) 2004-2006 NightLabs GmbH
Rehlingstr. 6d
79100 Freiburg, Germany
All rights reserved.

This is the DTD defining which bean methods should be called
for initialisation to be done when a new JFire (http://jfire.org)
server is started.

   Use is subject to license terms.
-->

<!NOTATION ServerInitialisation.1_1 PUBLIC
          "-//NightLabs GmbH//DTD Server Initialisation 1.0//EN">
<!--
This is the XML DTD for the initialisation of a new JFire server.
All server initialisation metadata descriptors must include a
DOCTYPE of the following form:

	<!DOCTYPE server-initialisation
		PUBLIC "-//NightLabs GmbH//DTD Server Initialisation 1.0//EN"
		"http://www.nightlabs.de/dtd/serverinit_1_0.dtd">

Every file must be named "serverinit.xml" and it must be located
in the META-INF directory of the JAR.

Here is an example:
	- - - example - - -
	<!DOCTYPE server-initialisation
		PUBLIC "-//NightLabs GmbH//DTD Server Initialisation 1.0//EN"
		"http://www.nightlabs.de/dtd/serverinit_1_0.dtd">
	<server-initialisation>
		<init class="org.nightlabs.jfire.chezfrancois.ChezFrancoisServerInitialiser" priority="200">
			<depends
					module="Dependency.ear"
					archive="Dependency.jar"
					class="org.nightlabs.jfire.dependency.DependencyInitialiser"
					afterDatastoreInit="false" />

			<depends
					module="AnotherModule.ear" />
		</init>

		<init class="org.nightlabs.jfire.AnotherInitialiser" />
	</server-initialisation>
	- - - /example - - -
-->



<!--
	The server-initialisation element is the root element.
	It contains the following elements:
		- init (one or more)
-->
<!ELEMENT server-initialisation (init+)>

<!--
	The "init" element defines a class that must be a subclass of ServerInitialiserDelegate.
	The given Initialiser is instantiated and its method initialise() called, after the
	execution order has been determined by resolving dependencies between Initialiers.

	The "init" element has the following attributes:
		- class (necessary)
		- priority (optional, defaults to "500")
	And it contains the following child nodes:
		- depends (zero or more)

	The attributes have the following meaning:
		- class:
			The subclass of ServerInitialiserDelegate that is supposed to do the initialisation.
		- priority:
			A number from 0 to 999 where 0 is the highest priority. If you omit
			this attribute, it defaults to 500. You should not assign values below
			100 and above 899, if you don't know what you're doing.
-->
<!ELEMENT init (depends*)>

<!ATTLIST init bean CDATA #IMPLIED>
<!ATTLIST init method CDATA #IMPLIED>
<!ATTLIST init priority CDATA #IMPLIED>

<!--
	The "depends" element defines another "init" declaration which should
	have been done before. If the declared dependency does not exist, a
	warning will be logged, but the initialisation will be done anyway.

	If there are multiple "depends" declarations, this initialisation will be performed
	after all dependent ones have been called. If there is a circular dependency, a
	warning will be logged and the inits will be performed in arbitrary order.

	The "depends" element has the following attributes:
		- module (necessary)
		- archive (optional but necessary when "class" is given)
		- class (optional)

	These attributes have the following meaning:
		- module:
			Defines the name of the J2EE enterprise archive.
			Example: "JFireBase.ear"
		- archive:
			Defines another archive in the form "ArchiveName.jar" where the
			other init is defined in.
		- class:
			The subclass of ServerInitialiserDelegate that is supposed to do the initialisation.
			
	If at least one of archive or method is empty or missing, all declared
	inits which match the declared attributes, are understood as dependencies. In
	other words: If you declare only module="JFireTrade.ear" as dependency and omit
	archive and class, then all inits declared by the module JFireTrade.ear
	must first be executed, before your init will be launched.
-->
<!ELEMENT depends EMPTY>
<!ATTLIST depends module CDATA #IMPLIED>
<!ATTLIST depends archive CDATA #IMPLIED>
<!ATTLIST depends bean CDATA #IMPLIED>
<!ATTLIST depends method CDATA #IMPLIED>