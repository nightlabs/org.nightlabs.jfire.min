<?xml version="1.0" encoding="UTF-8"?>
<connection-factories>
	<tx-connection-factory>
		<jndi-name>${jdoPersistenceManagerFactoryJNDIName_relative}</jndi-name>

<!-- JBoss 3.2.x: begin
		<adapter-display-name>JPOX Connector</adapter-display-name>
JBoss 3.2.x: end -->

<!-- JBoss 4.x: begin -->
		<rar-name>jpox.rar</rar-name>
		<connection-definition>javax.resource.cci.ConnectionFactory</connection-definition>
<!-- JBoss 4.x: end -->

<!-- indirect connection via datasource
		<config-property name="ConnectionDriverName" type="java.lang.String">org.jpox.driver.JPOXDriver</config-property>
		<config-property name="ConnectionURL" type="java.lang.String">jpox:{datasourceJNDIName_absolute}</config-property>
-->

<!-- direct connection -->
		<config-property name="ConnectionDriverName" type="java.lang.String">${databaseDriverName}</config-property>
		<config-property name="ConnectionURL" type="java.lang.String">${databaseURL}</config-property>
		<config-property name="ConnectionUserName" type="java.lang.String">${databaseUserName}</config-property>
		<config-property name="ConnectionPassword" type="java.lang.String">${databasePassword}</config-property>

		<config-property name="AutoCreateSchema" type="boolean">true</config-property>
		<config-property name="AutoCreateTables" type="boolean">true</config-property>
		<config-property name="AutoCreateColumns" type="boolean">true</config-property>
		<config-property name="ValidateColumns" type="boolean">false</config-property>

		<config-property name="JdoCacheCollections" type="boolean">true</config-property>
		<config-property name="NontransactionalRead" type="boolean">true</config-property>
<!--		<config-property name="UseUpdateLock" type="boolean">true</config-property>
-->
<!--		<config-property name="Optimistic" type="boolean">true</config-property>
-->

<!--
  If you use MySQL on GNU+Linux, you can savely activate PRESERVECASE (it's much more beautiful). Unfortunately,
  this setting doesn't work with MySQL on Windows. Thus, it's deactivated by default.
		<config-property name="IdentifierCase" type="java.lang.String">PRESERVECASE</config-property>
-->
		<config-property name="DetachOnClose" type="boolean">false</config-property>
		<config-property name="StringDefaultLength" type="int">255</config-property>

<!-- we currently don't use any connection pooling at all, because there still is a jpox bug (deletions fail)
  Does this bug really still exist? Can't we workaround at that specific location with PeristenceManager.flush()?
		<config-property name="ConnectionPoolingType" type="java.lang.String">Proxool</config-property>
		<config-property name="ConnectionPoolingConfigurationFile" type="java.lang.String">jpox-proxool.properties</config-property>
-->
		<config-property name="ConnectionPoolingType" type="java.lang.String">DBCP</config-property>
		<config-property name="ConnectionPoolingConfigurationFile" type="java.lang.String">jpox-dbcp.properties</config-property>

<!--
		<config-property name="ConnectionPoolingType" type="java.lang.String">C3P0</config-property>
		<config-property name="ConnectionPoolingConfigurationFile" type="java.lang.String">jpox-c3p0.properties</config-property>
-->

<!--
		<config-property name="JdoCacheLevel2" type="boolean">true</config-property>
		<config-property name="JdoCacheLevel2Type" type="java.lang.String">org.jpox.cache.SoftLevel2Cache</config-property>
-->

<!-- WORKAROUND: Remove when JPOX bug is fixed: -->
		<config-property name="PersistenceByReachabilityAtCommit" type="boolean">false</config-property>
		<max-pool-size>100</max-pool-size>
	</tx-connection-factory>
</connection-factories>
